CREATE TABLE `course` (
  `course_id` int(11) NOT NULL,
  `subject` varchar(5) DEFAULT NULL,
  `course_level` int(11) DEFAULT NULL,
  `name` varchar(255) DEFAULT NULL,
  `credits` int(11) DEFAULT NULL,
  `description` longtext
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

ALTER TABLE `course`
  ADD PRIMARY KEY (`course_id`);

ALTER TABLE `course`
  MODIFY `course_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=1;

INSERT INTO `course` (`subject`, `course_level`, `name`, `credits`, `description`) VALUES
('CSC', 10300, 'Introduction to Computing for Majors', 3, 'Intensive introduction to computing, tailored to the needs of those majoring in computer science and computer engineering. Introduction to programming in a modern object-oriented programming language such as C++, with particular emphasis on the logical evolution of working programs from specifications.'),
('CSC', 10400, 'Discrete Mathematical Structures', 4, 'Introduction to the mathematics fundamental to all phases of computer science, from the formulation of problems to the understanding of their underlying structure, to the comparative analysis of the complexity of algorithms that can be used to solve these problems. The course introduces combinatorics, first-order logic, induction, set theory, relations and functions, graphs, trees, and number theory.'),
('CSC', 11300, 'Programming Language', 1, 'This course designed to develop understanding of and fluency in current and important programming languages.  Specifically, this class will teach the fluency in Python.  The course is intended for those who have already learned object-oriented concepts in at least one programming language.  A series of programming projects is an essential component of the course.'),
('CSC', 21100, 'Fundamentals of Computer Systems', 3, 'Fundamentals of computer organization and digital logic. Boolean algebra, number systems and codes, combinational logic design principles, basic gates and components, flipflops and latches, counters and state machines. Assembly language and assemblers; procedures and data segments, linkages and subroutine calling conventions, loaders; practical use of an assembly language.'),
('CSC', 21200, 'Data Structures', 3, 'Extension of the knowledge of algorithm design and programming gained in CSc 10200 with continued emphasis on the logic underlying the transition from specification to program. Particular attention is paid to issues arising in the implementation of larger programs: introduction of data structures and data abstraction; the basics of object-oriented programming. Introduction of recursion as a design tool. Introduction of complexity analysis.'),
('CSC', 21700, 'Probability and Statistics for Computer Science', 3, 'Project course in which students work as leaders or members of project teams. Individual oral presentations and written reports. Overview of applicable discrete and stochastic foundations: combinatorics, probability, and Monte Carlo. Introduction to modeling formalism with examples from numerical and logical processes. Simulation languages such as MATLAB simulation toolbox and GPSS are demonstrated. Student projects entail simulations of physical or social science problems. Emphasis on student presentations with statistical analysis and visual summaries.'),
('CSC', 22000, 'Algorithms', 3, 'Measuring algorithmic complexity (ONotation); searching and sorting algorithms and their complexity; tree and graph algorithms and their complexity; classes of algorithms, such as divide-andconquer, backtracking, greedy, probabilistic, etc. Computational complexity; the classes P and NP.'),
('CSC', 22100, 'Software Design Laboratory', 3, 'Object-oriented programming in a software engineering context. Design patterns. Event-driven programming. Building an application with a graphical user interface: specifications; design; programming; accessing a database with a java program; unit and user testing. Projects done in teams; oral and written presentations.'),
('CSC', 30100, 'Numerical Issues in Scientific Programming', 3, 'Numerical issues: roundoff error, truncation error, overflow and underflow errors. Numerical integration; solution of simultaneous equations; curve fitting. A thorough introduction to scientific programming, using a modern version of the Fortran or Matlab language. Written reports and oral presentation of projects.'),
('CSC', 30400, 'Introduction to Theoretical Computer Science', 3, 'Finite state automata, pushdown automata, Turing Machines, and the languages they can recognize. Church’s Thesis. Computibility. The classes P and NP; NP-complete and intractable problems.'),
('CSC', 32200, 'Software Engineering', 4, 'The software development life cycle from feasibility study to turnover to client. Documentation of design, program, and training materials. Rapid prototyping languages. Software development management: team roles and organization, the version control problem, maintenance issues. Use of CASE tools emphasized and illustrated in projects. Written reports and oral presentation of projects. \r\n'),
('CSC', 33200, 'Operating Systems', 4, 'Overview of computer organization. Interrupts. Operating systems objectives and functions. Hardware protection mechanisms, dual mode operation. System calls. The evolution of operating systems. Process representation and control. Uniprocessor scheduling. Process synchronization: critical section problem, synchronization mechanisms, algorithms, language constructs, classical synchronization problems: issues of safety, liveness, and fairness. Deadlocks. Memory management and virtual memory. File management. I/O management and disk scheduling. In laboratory sessions students will study and implement programming projects that illustrate the concepts introduced in the lectures.'),
('CSC', 33500, 'Programming Language Paradigms', 3, 'Aspects of the design and implementation of functional, imperative, logic and object oriented programming languages, presented via a sequence of interpreters. Topics include abstraction, parameter passing, type checking, inheritance, and continuations. Substantial programming assignments.'),
('CSC', 33600, 'Introduction to Database Systems', 3, 'An introduction to database architecture. Levels of abstraction in a database system; physical database organization: abstract data models; relational databases and their query languages. Database design assignments.'),
('CSC', 34200, 'Computer Organization', 3, 'This course provides computer science and computer engineering students with an in depth look at computer architecture and the hardware/software interface. The major topics are: computer abstractions and technology; the role of performance and measuring performance; SPEC. computer arithmetic; machine language: a comparative analysis of instruction sets of current processors using debuggers, simulators and by the partial reverse engineering of executables. The processor: data path and control; RISC versus CISC; design, implementation (using VHDL), and verification (in simulation) of a simplified RISC processor using CAD tools. Enhancing performance with pipelining. Memory hierarchy, cache, virtual memory, performance issues. interfacing processors and peripherals; PCI chipset. Overview of multiprocessors, grid computing.'),
('CSC', 34300, 'Computer Systems Design Laboratory', 1, 'Introduction to FPLD technology, logic synthesis, and rapid prototyping of digital systems using commercial CAD tools. Topics: Programmable Logic Technology. Sequential Design and Hierarchy. Synthesis of Digital Hardware using VHDL. State Machine Design, CPU Controller. A Simple Processor Design. Video Graphics Adapter (VGA) video display generation. Design PS/2 Keyboard interface. Design of PS/2 Mouse interface. Synthesis of a RISC processor as covered in CSc 34200. Students are required to prepare written reports and demonstrate their design.'),
('CSC', 59866, 'Senior Project I', 3, 'This is a two semester capstone course. The student is required to complete a significant project in computer science or engineering under the mentorship of a faculty member. In addition to technical material required for successful completion of a specific project, topics include identification of a problem, background research, social, ethical and economic considerations, intellectual property and patents and proposal writing, including methods of analysis and theoretical modeling. A detailed project proposal is formulated in the first semester, and the project is completed in the second semester. Each student is required to write an in-depth report, and to make an oral presentation to the faculty. Senior year students only, or permission of the department.'),
('CSC', 59867, 'Senior Project II', 3, 'This is a two semester capstone course. The student is required to complete a significant project in computer science or engineering under the mentorship of a faculty member. In addition to technical material required for successful completion of a specific project, topics include identification of a problem, background research, social, ethical and economic considerations, intellectual property and patents and proposal writing, including methods of analysis and theoretical modeling. A detailed project proposal is formulated in the first semester, and the project is completed in the second semester. Each student is required to write an in-depth report, and to make an oral presentation to the faculty. Senior year students only, or permission of the department.'),
('CSC', 42200, 'Computability', 3, 'Shepherdson-Sturgis machines. Elements of recursive function theory. The equivalence of the class of computable and recursive functions. Church’s thesis; other models of computation: Post machines, Turing machines, semi-Thue systems, etc. Unsolvable problems and introduction to their classification. Subrecursive formalism.'),
('CSC', 42800, 'Formal Languages and Automata', 3, 'Classes of languages; their description in terms of grammars and their recognition by automata. The Chomsky hierarchy; regular, context-free, context-sensitive and recursively enumerable languages. Application to parsing and compiler construction.'),
('CSC', 44800, 'Artificial Intelligence', 3, 'State-space and problem-induction representations of problems. Heuristic methods. Mechanical theorem proving. Application of these techniques to artificial intelligence problems.'),
('CSC', 45000, 'Combinatorics and Graph Theory', 3, 'An introduction to combinatorial analysis and graph theory. Sample topics: principle of inclusion and exclusion, recurrence relations, zero-one matrices, partitions, Polya’s Theorem, directed graphs.'),
('CSC', 38000, 'Computer Security', 3, 'An introduction to the principles and practices of computer security in various computing environments. Conventional encryption systems and classical cryptography. Confidentiality using conventional encryption. Public key cryptography and protocols for authentication and digital signatures. Recent cryptanalytic attacks on conventional and public key systems. Intruders, worms, viruses and trusted systems. Firewalls and internetwork security. A survey of applications and problems arising in contemporary computer security.'),
('CSC', 48600, 'Introduction to Computational Complexity', 3, 'An introduction to the performance and limitations of computer algorithms through a study of selected algorithms. Topics include primality testing and integer factorization, algorithms for integer programming and knapsack problems, reductions and NP-completeness, randomized algorithms, and experimental algorithms arising from new technologies such as molecular, neural, and quantum computing.'),
('CSC', 44000, 'Computational Methods in Numerical Analysis', 3, 'Introduction to numerical algorithms for scientific computation. Basic concepts of numerical error. Interpolation, quadrature, solution of linear systems of equations, non-linear equations, ordinary differential equations. Some discussion of partial differential equations and numerical methods of solving them. Computer implementation aspects.'),
('CSC', 44200, 'Systems Simulation', 3, 'Simulation of dynamic stochastic systems using models involving numerical and logical processes. Modeling concepts, description in terms of entities, attributes, and activities, time flow mechanisms, queues, event-oriented vs. particle-oriented models. Generation of stochastic variates, collection and evaluation of statistics. Simulation languages. Computer projects using a general purpose language (e.g. Fortran or Matlab) and at least one simulation language (e.g. GPSS) will be assigned.'),
('CSC', 44600, 'Mathematical Optimization Techniques', 3, 'Maximization and minimization of functions of several variables, with and without constraints. Convex sets and functions, linear and dynamic programming, network flows.'),
('CSC', 47000, 'Image Processing', 3, 'An intensive introduction to digital image processing. Image enhancement, digital filtering theory. Fourier transforms, image reconstruction, resampling, antialiasing, geometric transformations, scanline algorithms, warping, and morphing. Emphasisis on computational techniques. Substantial programming assignments.'),
('CSC', 47100, 'Computer Vision', 3, 'An intensive introduction to algorithms that recover information from images, motion sequences, multiple views, and 3D volumes. Topics include edge and region recovery, perspective, texture, object recognition, and 3D shape from shading/stereo/motion. Substantial programming assignments.'),
('CSC', 47200, 'Computer Graphics', 3, 'An intensive study of computer graphics. Graphics hardware, OpenGL API, raster scan conversion, clipping, geometric transformations, 3D viewing, visible surface determination, illumination, shading, splines, ray tracing and animation. Substantial programming assignments.'),
('CSC', 47900, 'Digital Libraries', 3, 'An introduction to the principles and practice of digital libraries. Algorithms are drawn from computer vision, pattern recognition, image processing, and document processing. Topics include low-level image processing, texture, color constancy, shape from X, supervised and unsupervised training, and implementation issues regarding content based multimedia database. Programming assignments will be implemented in C++ or Java.'),
('CSC', 31800, 'Internet Programming', 3, 'This course provides advanced CSc/engineering majors with an understanding of web-based application development.'),
('CSC', 41200, 'Computer Networks', 3, 'Layer approach to understanding networks using the ISO model: physical layer, data link layer, network layer, and, as time permits, the transport, session, presentation, and application layers.'),
('CSC', 42000, 'Compiler Construction', 3, 'Formal description of programming languages and techniques used in their compilation. Study of syntax, semantics, ambiguities, procedures replication, iteration, and recursion in these languages. Syntactic decomposition and the theory of compilers that are syntax-directed or recursively controlled.'),
('CSC', 43000, 'Distributed Computing', 3, 'Basic model of distributed computing. Asynchronous and synchronous message passing. Algorithms for distributed termination detection and their correctness proofs. The correctness requirements of safety, liveness, and fairness in distributed computations. Synchronization algorithms. Communicating Sequential Processes. Higher level language constructs for synchronization algorithms. Verification methods. Several seemingly correct but actually incorrect algorithms will be shown for the above problems to appreciate the subtle correctness problems in distributed algorithms.'),
('CSC', 43500, 'Concurrency in Operating Systems', 3, 'Mutual exclusion-software and hardware approaches. The correctness requirements of safety, liveness, and fairness. Semaphores, monitors and other concurrent programming constructs. Classical synchronization problems. Axiomatic verification of concurrent algorithms. Models of distributed computation. Distributed termination detection. Time clocks, and ordering of events. Distributed Mutual Exclusion. Deadlocks in distributed systems.'),
('CSC', 43800, 'Real-Time Computing Systems', 3, 'Operating systems and architectural concepts of real-time systems. Review of I/O programming and basic machine language programming. Interrupt processes. Coding of specific device drivers using absolute addressing status registers, command signals, buffering. Timing considerations and applications. Concurrent processes, waitsend phenomena, and the use of semaphores.'),
('CSC', 47300, 'Web Site Design', 3, 'The design and implementation of web sites from a Human-Computer Interaction viewpoint, with emphasis on user testing. Navigation design. Accessibility by persons with limitations in vision or motor ability is stressed and must be addressed in the final project.');